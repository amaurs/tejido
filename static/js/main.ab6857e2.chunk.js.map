{"version":3,"sources":["util.js","matrix.js","Loom.js","App.js","serviceWorker.js","index.js"],"names":["mod","n","m","Matrix","width","height","seed","this","board","init","i","push","j","setXY","Math","random","x","y","status","row","getXY","console","log","context","squareSize","color","printContextOffset","colorA","colorB","fillStyle","fillRect","result","other","assert","errorMsg","dot","k","Loom","props","ref","useRef","useState","useEffect","timeoutId","threadingSize","treadlingSize","threading","canvasSize","treadling","tieup","randomize","frameId","requestAnimationFrame","animate","setTimeout","canvas","current","getContext","clearRect","shiftRight","weave","shiftUp","multiply","transpose","printContext","cancelAnimationFrame","clearTimeout","style","className","App","setThreadingSize","setTreadlingSize","handleKeyPress","event","key","window","addEventListener","removeEventListener","innerHeight","innerWidth","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.ab6857e2.chunk.js","sourcesContent":["\n\nexport function mod(n, m) {\n    return ((n % m) + m) % m;\n}","import { mod } from './util.js';\nconst ALIVE = 1;\nconst DEAD = 0;\n\nexport default class Matrix {\n\n    constructor(width, height, seed) {\n        this.height = height;\n        this.width = width;\n        this.board = [];\n        this.seed = seed || .5;\n        this.init();\n    }\n\n    init() {\n        this.board = [];\n        for (let i = 0; i < this.width * this.height; i++) {\n            this.board.push(DEAD);\n        }\n    }\n\n    randomize() {\n        for(let i = 0; i < this.width; i++) {\n            for(let j = 0; j < this.height; j++) {\n                this.setXY(i, j, Math.random() < this.seed? ALIVE: DEAD);\n            }\n        }\n    }\n    \n    getBoard() {\n        return this.board;\n    }\n\n    getXY(x, y) {\n        return this.board[mod(y, this.height) * this.width + mod(x, this.width)];\n    }\n\n    setXY(x, y, status) {\n        this.board[mod(y, this.height) * this.width + mod(x, this.width)] = status;\n    }\n\n    print() {\n        for(let j = 0; j < this.height; j++) {\n            let row = \"\"\n            for(let i = 0; i < this.width; i++) {\n                row = row + (this.getXY(i, j)?\"+\": \"-\");\n            }\n            console.log(row)\n        }\n        console.log(\"\")\n    }\n\n    printContext(context, squareSize, color) {\n        this.printContextOffset(context, squareSize, 0, 0, color);\n    }\n\n    printContextOffset(context, squareSize, x, y, colorA, colorB) {\n        for(let j = 0; j < this.height; j++) {\n            for(let i = 0; i < this.width; i++) {\n                if (this.getXY(i, j)) {\n                    context.fillStyle = colorA;\n                } else {\n                    context.fillStyle = colorB || \"white\";\n                }\n                context.fillRect((x + i) * squareSize, (y + j) * squareSize, squareSize, squareSize);\n            }\n        }\n    }\n\n    shiftDown() {\n        let result = new Matrix(this.width, this.height);\n        for(let j = this.height - 1; j > 0; j--) {\n            for(let i = 0; i < this.width; i++) {\n                result.setXY(i, j, this.getXY(i, j - 1));\n            }\n        }\n        for(let i = 0; i < this.width; i++) {\n            result.setXY(i, 0, Math.random() < this.seed? ALIVE: DEAD);\n        }\n        return result;\n    }\n\n    shiftUp() {\n        let result = new Matrix(this.width, this.height, this.seed);\n        for(let j = 0; j < this.height - 1; j++) {\n            for(let i = 0; i < this.width; i++) {\n                result.setXY(i, j, this.getXY(i, j + 1));\n            }\n        }\n        for(let i = 0; i < this.width; i++) {\n            result.setXY(i, this.height - 1, Math.random() < this.seed? ALIVE: DEAD);\n        }\n        return result;\n    }\n\n    shiftRight() {\n        let result = new Matrix(this.width, this.height, this.seed);\n        for(let j = 0; j < this.height; j++) {\n            for(let i = this.width - 1; i > 0; i--) {\n                result.setXY(i, j, this.getXY(i - 1, j));\n            }\n        }\n        for(let j = 0; j < this.height; j++) {\n            result.setXY(0, j, Math.random() < this.seed? ALIVE: DEAD);\n        }\n        return result;\n    }\n\n\n    multiply(other) {\n\n        console.assert(other.height === this.width, {errorMsg: \"Matrix dimension do not match.\"});\n        let result = new Matrix(other.width, this.height);\n\n        for(let j = 0; j < this.height; j++) {\n            for(let i = 0; i < other.width; i++) {\n                let dot = 0;\n                for(let k = 0; k < other.height; k++) {\n                    dot += this.getXY(k, j) * other.getXY(i, k);\n                }\n                result.setXY(i, j, dot);\n            }\n        }\n \n        return result;\n    }\n\n    transpose() {\n        let result = new Matrix(this.height, this.width);\n\n        for(let j = 0; j < this.height; j++) {\n            for(let i = 0; i < this.width; i++) {\n                result.setXY(j, i, this.getXY(i,j));\n            }\n        }\n \n        return result;\n    }\n}","import React, { useState, useRef, useContext, useEffect } from 'react';\nimport { useTimeout } from './Hooks.js';\nimport Matrix from './matrix.js';\nimport './Loom.css';\n\nconst canvasSize = 1000;\nconst squareSize = 10;\n\n\n\n\nconst Loom = (props) => {\n    let ref = useRef();\n    const [drag, setDrag] = useState(false);\n    const [position, setPosition] = useState([48 * squareSize, 48 * squareSize]);\n    const [offset, setOffset] = useState([0,0]);\n    const square = [8 * squareSize, 3 * squareSize];\n\n\n    useEffect(() => {\n        let timeoutId;\n        const threadingSize = props.threadingSize;\n        const treadlingSize = props.treadlingSize;\n        \n        let threading = new Matrix(canvasSize / squareSize - treadlingSize, threadingSize, .1);\n        let treadling = new Matrix(treadlingSize, canvasSize / squareSize - threadingSize, .1);\n        let tieup = new Matrix(treadlingSize, threadingSize, .5);\n        threading.randomize();\n        treadling.randomize();\n        tieup.randomize();\n\n        const animate = () => {\n\n            timeoutId = setTimeout(function() {\n                let canvas = ref.current;\n                let context = canvas.getContext('2d');\n                \n                context.clearRect(0, 0, canvas.width, canvas.height);\n\n                threading = threading.shiftRight();\n                treadling = treadling.shiftUp();\n\n                let weave = treadling.multiply(tieup.transpose()).multiply(threading);\n\n                threading.printContext(context, squareSize, \"black\");\n                treadling.printContextOffset(context, squareSize, canvasSize / squareSize - treadlingSize, threadingSize, \"cyan\");\n                tieup.printContextOffset(context, squareSize, canvasSize / squareSize - treadlingSize, 0, \"blue\");\n\n                weave.printContextOffset(context, squareSize, 0, threadingSize, \"cyan\", \"black\");\n                frameId = requestAnimationFrame(animate);\n            }, 1000/60);\n        }\n    \n        let frameId = requestAnimationFrame(animate);\n        return () => {\n            cancelAnimationFrame(frameId);\n            clearTimeout(timeoutId);\n            frameId = null;\n        }             \n\n    }, [props.threadingSize, props.treadlingSize])\n\n\n\n    let style = {};\n    if (props.width > 0 && props.height > 0) {\n        style = props.width / props.height<1? {width: \"100vw\"} : {height: \"100vh\"};\n    }\n    \n    return (\n       <canvas\n           className=\"Loom\"\n           ref={ref} \n           style={style}\n           width={canvasSize}\n           height={canvasSize}\n       />\n   );\n};\n\nexport default Loom;","import React, { useState, useEffect } from 'react';\nimport Loom from './Loom.js'\nimport './App.css';\n\nfunction App() {\n\n  let [threadingSize, setThreadingSize] = useState(9);\n  let [treadlingSize, setTreadlingSize] = useState(7);\n\n  useEffect(() => {\n    const handleKeyPress = (event) => {\n      if (event.key === 'ArrowUp') {\n          setThreadingSize(threadingSize + 1)\n      }\n      if (event.key === 'ArrowDown') {\n          setThreadingSize(threadingSize - 1);\n      }\n      if (event.key === 'ArrowRight') {\n          setTreadlingSize(treadlingSize + 1);\n      }\n      if (event.key === 'ArrowLeft') {\n          setTreadlingSize(treadlingSize - 1);\n      }\n    }\n    window.addEventListener(\"keydown\", handleKeyPress);\n    return () => {\n        window.removeEventListener(\"keydown\", handleKeyPress);\n    }\n  }, [threadingSize, treadlingSize]);\n\n\n  return (\n    <div className=\"App\">\n      <Loom height={window.innerHeight} \n            width={window.innerWidth}\n            threadingSize={threadingSize}\n            treadlingSize={treadlingSize} />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}